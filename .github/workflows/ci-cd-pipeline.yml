name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: us-east-2  # Specify the AWS region here

      - name: Build and Push Docker image
        id: build-image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/assignment-one:latest .
          docker push ${{ secrets.ECR_REGISTRY }}/assignment-one:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Update ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          task-definition: ecs-task-definition.json
          service: your-ecs-service
          cluster: your-ecs-cluster
          wait-for-service-stability: true

      - name: Run Integration Tests
        run: |
          # Add your integration test commands here
          echo "Running tests..."

  rollback:
    if: failure()
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Rollback ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          task-definition: ecs-task-definition.json
          service: your-ecs-service
          cluster: your-ecs-cluster
          wait-for-service-stability: true
